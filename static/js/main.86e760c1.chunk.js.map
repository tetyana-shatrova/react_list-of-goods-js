{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","handleSort","sort","visibleGoods","goods","ret","good1","good2","localeCompare","length","reverse","getVisibleGoods","className","type","cn","onClick","pr","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmBK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAa,SAAAC,GAAI,OAAIJ,EAAaI,IAMlCC,EAzBR,SAAyBC,EAAOP,EAAWE,GACzC,IAAIM,EAAG,YAAOD,GAYd,MAVkB,QAAdP,EACFQ,EAAMA,EAAIH,MAAK,SAACI,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC9B,WAAdV,IACTQ,EAAMA,EAAIH,MAAK,SAACI,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,YAGrC,IAAfV,GACFM,EAAIK,UAGCL,EAYcM,CAAgBjB,EAAiBG,EAAWE,GAEjE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAyB,QAAdf,EACPiB,IAAG,kBAAoBA,IAAG,2BAC9BC,QAAS,kBAAMd,EAAW,QAJ5B,iCASA,wBACEY,KAAK,SACLD,UAAyB,WAAdf,EACPiB,IAAG,qBAAuBA,IAAG,8BACjCC,QAAS,kBAAMd,EAAW,WAJ5B,4BASA,wBACEY,KAAK,SACLD,UAAWE,IAAG,qBAAD,OAAsBf,EAAa,GAAK,aACrDgB,QAAS,kBA/BWf,GAAc,SAAAgB,GAAE,OAAKA,MA4B3C,qBAQe,KAAdnB,GAAqBE,EACpB,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAtCjBjB,EAAa,SAAKE,GAAc,IAmC1B,mBADiC,MAWrC,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCpFlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.86e760c1.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getVisibleGoods(goods, sortField, isReversed) {\n  let ret = [...goods];\n\n  if (sortField === 'abs') {\n    ret = ret.sort((good1, good2) => good1.localeCompare(good2));\n  } else if (sortField === 'length') {\n    ret = ret.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed === true) {\n    ret.reverse();\n  }\n\n  return ret;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const handleSort = sort => setSortField(sort);\n  const handleReverse = () => setIsReversed(pr => !pr);\n  const handleReset = () => {\n    setSortField(''); setIsReversed(false);\n  };\n\n  const visibleGoods = getVisibleGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortField === 'abs'\n            ? cn('button is-info') : cn('button is-info is-light')}\n          onClick={() => handleSort('abs')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortField === 'length'\n            ? cn('button is-success') : cn('button is-success is-light')}\n          onClick={() => handleSort('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(`button is-warning ${isReversed ? '' : 'is-light'}`)}\n          onClick={() => handleReverse()}\n        >\n          Reverse\n        </button>\n\n        {sortField === '' && !isReversed ? '' : (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => handleReset('sortField')}\n          >\n\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}